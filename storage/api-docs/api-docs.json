{
    "openapi": "3.0.0",
    "info": {
        "title": "ToNote App OpenApi API Documentation",
        "description": "ToNote App Using L5 Swagger OpenApi description",
        "contact": {
            "email": "schneidershades@gmail.com"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8081",
            "description": "Staging API server"
        },
        {
            "url": "https://dev-api.gettonote.com",
            "description": "Staging API server"
        },
        {
            "url": "https://staging.gettonote.com",
            "description": "Staging API server"
        },
        {
            "url": "http://tonote.test",
            "description": "Local API server"
        },
        {
            "url": "https://api.gettonote.com",
            "description": "Live API server"
        },
        {
            "url": "http://localhost:8000",
            "description": "localhost API server"
        }
    ],
    "paths": {
        "/api/v1/addresses": {
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "allAddresses",
                "description": "allAddresses",
                "operationId": "allAddresses",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Address"
                ],
                "summary": "postAddresses",
                "description": "postAddresses",
                "operationId": "postAddresses",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/addresses/{id}": {
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "showAddresses",
                "description": "showAddresses",
                "operationId": "showAddresses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Addresses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Address"
                ],
                "summary": "updateAddresses",
                "description": "updateAddresses",
                "operationId": "updateAddresses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Addresses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Address"
                ],
                "summary": "deleteAddresses",
                "description": "deleteAddresses",
                "operationId": "deleteAddresses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Addresses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/affiliates": {
            "get": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Affiliate's dashboard",
                "description": "Return the data for an affiliate's dashboard",
                "operationId": "affiliateDashboard",
                "responses": {
                    "200": {
                        "description": "Successful ",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "User is not an affiliate",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/affiliates/dashboard/graph": {
            "get": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Return affiliate earnings summation based on a specified period for dashboard",
                "operationId": "095cce54e17e6d3aaad2bd730a05268d",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Period for which earnings are requested",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "year",
                                "month",
                                "week",
                                "day"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/affiliates/earnings": {
            "get": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Get an affiliate's earnings",
                "description": "Return a paginated list of the earnings of an affiliate",
                "operationId": "1afaa28fe13cd9f69879ddc1cd55f80a",
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Search keyword for user names",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number of data to be returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/affiliates/partner-types": {
            "get": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Get partner types",
                "description": "Get all the affiliate partner type enum values to be used in pages such as the 'How would you like to partner with us' dropdown of the registration endpoint",
                "operationId": "affiliatePartnerTypes",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "User is not an affiliate",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/v1/affiliates/payouts": {
            "get": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Get an affiliate's payouts",
                "description": "Return a paginated list the earnings of an affiliate",
                "operationId": "4f3a0f086e7e9ae0405d8698b053d80c",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number of data to be returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/affiliates/payouts/statistics": {
            "get": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Get affiliate's payouts statistics",
                "operationId": "e76e0b9feb0c069df59ae30755907836",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/affiliates/promo-kit": {
            "get": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Affiliate promotional kit URL",
                "operationId": "038581fc443c2d354d703260f9637403",
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                }
            }
        },
        "/api/v1/affiliates/register": {
            "post": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Register a new Affiliate",
                "description": "Create a new Affiliate user account",
                "operationId": "affiliateRegister",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful signup",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Affiliate account already exists",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/v1/affiliates/subscribers": {
            "get": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Get an affiliate's subscribers",
                "description": "Return a paginated list of all users who subscribed via the affiliate",
                "operationId": "c4ee0170f5876996b655ed8ed89366f3",
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Search keyword for user names",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter subscribers by status",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number of data to be returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/affiliates/subscriber-count": {
            "get": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Subscribers count",
                "description": "Get the number of users that have subscribed via this affiliate",
                "operationId": "affiliateSubscriberCount",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "User is not an affiliate",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/affiliates/subscribers/statistics": {
            "get": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Get affiliate's subscribers statistics",
                "operationId": "38fb4692b44ba49908e0fa091a3f2788",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/affiliates/subscriber-status": {
            "get": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Get affiliate subscriber statuse values",
                "operationId": "0cc06b7a837e5f4efaabe36cd6eccbae",
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                }
            }
        },
        "/api/v1/affiliates/visit": {
            "patch": {
                "tags": [
                    "Affiliate"
                ],
                "summary": "Increment affiliate referral URL visits/clicks",
                "operationId": "1c0a0aec12c5964d36f127b9ebe5a9f6",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Unique code assigned to an affiliate",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response with no content"
                    }
                }
            }
        },
        "/api/v1/agora/token": {
            "post": {
                "tags": [
                    "Agora"
                ],
                "summary": "get agora authentication token",
                "description": "get agora authentication token",
                "operationId": "AgoraToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgoraSessionTokenFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful password change",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/change/password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "change password for user",
                "description": "change password of registered user data",
                "operationId": "changepassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful password change",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/change/document-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "change password for user",
                "description": "change password of registered user data",
                "operationId": "changeDocumentpassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentPasswordChangeFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful password change",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/document/resend/otp": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Resend of a registered user",
                "description": "Resend of a registered user",
                "operationId": "userResendDocumentOTP",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentResendOtpFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/document/verify": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Profile of a registered user",
                "description": "Profile of a registered user",
                "operationId": "userVerifyDocumentViaOTP",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentVerificationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/password/email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "reset a registered user password",
                "description": "Returns a registered user reset email",
                "operationId": "sendResetMailForgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/user/google-login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign In a registered user",
                "description": "Returns a newly registered user data",
                "operationId": "googleSignIn",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GoogleAuthFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/user/password/reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "reset a registered user password",
                "description": "Returns a registered user reset email",
                "operationId": "resetPasswordFromToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/user/session/resend/otp": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Resend of a registered user",
                "description": "Resend of a registered user",
                "operationId": "d902945984fba60b06fc616f14f5dd19",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionResendOtpFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/ScheduleSession/verify": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Profile of a registered user",
                "description": "Profile of a registered user",
                "operationId": "userVerifyScheduleSessionViaOTP",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionOtpVerificationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign Up a new user",
                "description": "Returns a newly registered user data",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistrationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signup",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/user/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign In a registered user",
                "description": "Returns a newly registered user data",
                "operationId": "signIn",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLoginFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/user/update": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Profile of a registered user",
                "description": "Profile of a registered user",
                "operationId": "updateUserProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a registered user",
                "description": "Logout a registered user",
                "operationId": "userLogout",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/profile": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Profile of a registered user",
                "description": "Profile of a registered user",
                "operationId": "userProfile",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/dashboard": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Dashboard of a registered user",
                "description": "Dashboard of a registered user",
                "operationId": "userDashboard",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/email/resend": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Verify email of a registered user",
                "description": "Verify email of a registered user",
                "operationId": "userResendVerifyEmailViaOTP",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResendVerificationEmailFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/email/resend-verify-Otp-with-link": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Verify email of a registered user",
                "description": "Verify email of a registered user",
                "operationId": "userResendVerifyEmailViaOTPWithLink",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResendVerificationEmailFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/email/verify": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Profile of a registered user",
                "description": "Profile of a registered user",
                "operationId": "userVerifyViaOTP",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerificationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/verify/user": {
            "post": {
                "tags": [
                    "VerifyMe"
                ],
                "summary": "Verify registered user",
                "description": "Verify registered user",
                "operationId": "userResendVerifyMeAPI",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreVerifyMeFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/verify/company": {
            "post": {
                "tags": [
                    "VerifyMe"
                ],
                "summary": "Verify registered company",
                "description": "Verify registered company",
                "operationId": "companyResendVerifyMeAPI",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreVerifyCompanyFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/banks": {
            "get": {
                "tags": [
                    "Banks"
                ],
                "summary": "allBanks",
                "description": "allBanks",
                "operationId": "allBanks",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/bank-details": {
            "get": {
                "tags": [
                    "UserBankDetails"
                ],
                "summary": "allBankDetails",
                "description": "allBankDetails",
                "operationId": "allBankDetails",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserBankDetails"
                ],
                "summary": "postBankDetails",
                "description": "postBankDetails",
                "operationId": "postBankDetails",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankDetailCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/bank-details/{id}": {
            "get": {
                "tags": [
                    "UserBankDetails"
                ],
                "summary": "showBankDetails",
                "description": "showBankDetails",
                "operationId": "showBankDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BankDetails ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "UserBankDetails"
                ],
                "summary": "updateBankDetails",
                "description": "updateBankDetails",
                "operationId": "updateBankDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BankDetails ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "UserBankDetails"
                ],
                "summary": "deleteBankDetails",
                "description": "deleteBankDetails",
                "operationId": "deleteBankDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BankDetails ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cards": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Profile of a registered Company",
                "description": "Profile of a registered Company",
                "operationId": "userCreditCards",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cards/{id}": {
            "delete": {
                "tags": [
                    "Transaction"
                ],
                "summary": "deleteCreditCards",
                "description": "deleteCreditCards",
                "operationId": "deleteCreditCards",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/card-default/{id}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "defaultCreditCards",
                "description": "defaultCreditCards",
                "operationId": "defaultCreditCards",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Recurring Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/new-card": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Post New Cards",
                "description": "Post New Cards",
                "operationId": "postCards",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/company": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Profile of a registered Company",
                "description": "Profile of a registered Company",
                "operationId": "userCompanyProfile",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Profile of a registered coUpdatempany",
                "description": "Profile of a registered company",
                "operationId": "updateCompanyProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCompanyFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/company-profile-status": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Profile of a registered Company",
                "description": "Profile of a registered Company",
                "operationId": "userCompanyProfileCompleteStatus",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/company/verify": {
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Verify registered company",
                "description": "Verify registered company",
                "operationId": "companyVerifyMeAPI",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreVerifyCompanyFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-company-verification": {
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Post CompanyVerification",
                "description": "Post CompanyVerification",
                "operationId": "CompanyVerification",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreQoreIdCompanyFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/schedule-compliance-questions/{id}": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Show ComplianceQuestion",
                "description": "Show ComplianceQuestion",
                "operationId": "showComplianceQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ScheduleSession ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/schedule-compliance-responses/{schedule_session_id}": {
            "put": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Update updateComplianceResponse",
                "description": "Update updateComplianceResponse",
                "operationId": "updateComplianceResponse",
                "parameters": [
                    {
                        "name": "schedule_session_id",
                        "in": "path",
                        "description": "Sechedule_session ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateComplianceResponseFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-export/{id}": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Show DocumentExport",
                "description": "Show DocumentExport",
                "operationId": "showDocumentExport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document Export ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/document-export-test/{id}": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Show DocumentExportTest",
                "description": "Show DocumentExportTest",
                "operationId": "showDocumentExportTest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document Export ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/declined-documents": {
            "get": {
                "tags": [
                    "DocumentParticipant"
                ],
                "summary": "AllDeclinedDocuments",
                "description": "AllDeclinedDocuments",
                "operationId": "allDeclinedDocument",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/declined-documents/{id}": {
            "get": {
                "tags": [
                    "DocumentParticipant"
                ],
                "summary": "UserDeclinedDocument",
                "description": "UserDeclinedDocument",
                "operationId": "DeclinedDocument",
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "path",
                        "description": "Documents ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-participant-add-self/{document_id}": {
            "get": {
                "tags": [
                    "DocumentParticipant"
                ],
                "summary": "AddSelfSignToDocument",
                "description": "AddSelfSignToDocument",
                "operationId": "AddSelfSignToDocument",
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "path",
                        "description": "Documents ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-audit-trail/{id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Show DocumentAuditTrail",
                "description": "Show DocumentAuditTrail",
                "operationId": "showDocumentAuditTrail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Documents ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "Replace AuditTrail",
                "description": "Replace AuditTrail",
                "operationId": "updateAuditTrail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Documents ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAuditTrailActionFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-complete": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "allCompletedDocuments",
                "description": "allCompletedDocuments",
                "operationId": "allCompletedDocuments",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-complete/{id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Complete Document",
                "description": "Complete Document",
                "operationId": "completeDocument",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "updatecompleteDocument",
                "description": "updatecompleteDocument",
                "operationId": "updatecompleteDocument",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCompleteDocumentFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/documents": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Create a new Document",
                "description": "Create a new Document",
                "operationId": "allDocuments",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Post Documents",
                "description": "Post Documents",
                "operationId": "postDocument",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/documents/{id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Show Documents",
                "description": "Show Documents",
                "operationId": "showDocuments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Documents ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "Replace Documents",
                "description": "Replace Documents",
                "operationId": "updateDocuments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Documents ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDocumentFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document/{id}": {
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Delete Document",
                "description": "Delete Document",
                "operationId": "deleteDocument",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-create-password": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Create password of a registered user",
                "description": "Create password of a registered user",
                "operationId": "userDocumentCreatePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentVerificationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-multiple-delete": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Post DocumentsDelete",
                "description": "Post DocumentsDelete",
                "operationId": "postDocumentDelete",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentDeleteFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-image-tools/{id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Show DocumentImages",
                "description": "Show DocumentImages",
                "operationId": "showDocumentImages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-lock-status/{id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Show updateDocumentLockStatus",
                "description": "Show updateDocumentLockStatus",
                "operationId": "updateDocumentLockStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-locker": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get document locker",
                "description": "get document locker",
                "operationId": "documentLocker",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Post DocumentLocker",
                "description": "Post DocumentLocker",
                "operationId": "postDocumentLocker",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentLockerFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-locker/{id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Show DocumentLocker",
                "description": "Show DocumentLocker",
                "operationId": "showDocumentLocker",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Delete DocumentLocker",
                "description": "Delete DocumentLocker",
                "operationId": "deleteDocumentLocker",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DocumentLocker ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-otp-locker": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get document otp locker",
                "description": "get document otp locker",
                "operationId": "documentotpLocker",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Verify Otp of a user locker",
                "description": "Verify Otp of a user locker",
                "operationId": "documentlockerVerifyViaOTP",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerificationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-participants": {
            "post": {
                "tags": [
                    "DocumentParticipant"
                ],
                "summary": "Post DocumentParticipant",
                "description": "Post DocumentParticipant",
                "operationId": "postDocumentParticipant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentParticipantFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-participants/{id}": {
            "put": {
                "tags": [
                    "DocumentParticipant"
                ],
                "summary": "Update DocumentParticipants",
                "description": "Update DocumentParticipants",
                "operationId": "updateDocumentParticipants",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DocumentParticipants ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDocumentParticipantFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DocumentParticipant"
                ],
                "summary": "Delete DocumentParticipant",
                "description": "Delete DocumentParticipant",
                "operationId": "deleteDocumentParticipant",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DocumentParticipant ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-participants-done/{id}": {
            "put": {
                "tags": [
                    "DocumentParticipant"
                ],
                "summary": "Update DocumentParticipantDone",
                "description": "Update DocumentParticipantDone",
                "operationId": "updateParticipantDone",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentParticipantDoneFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/documents-received": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "show Document Received",
                "description": "show Document Received",
                "operationId": "allDocumentsReceived",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-participants-send-email": {
            "post": {
                "tags": [
                    "DocumentParticipant"
                ],
                "summary": "Post DocumentParticipant email notification",
                "description": "Post DocumentParticipant email notification",
                "operationId": "postDocumentParticipantEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentParticipantSendMailFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-resource-tools": {
            "post": {
                "tags": [
                    "DocumentResourceTool"
                ],
                "summary": "Post DocumentResourceTool",
                "description": "Post DocumentResourceTool",
                "operationId": "postDocumentResourceTool",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentResourceFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-resource-tools/{id}": {
            "get": {
                "tags": [
                    "DocumentResourceTool"
                ],
                "summary": "Show DocumentResourceTool",
                "description": "Show DocumentResourceTool",
                "operationId": "showDocumentResourceTool",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Documents ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "DocumentResourceTool"
                ],
                "summary": "Update DocumentResourceTool",
                "description": "Update DocumentResourceTool",
                "operationId": "updateDocumentResourceTool",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DocumentResourceTool ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDocumentResourceFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DocumentResourceTool"
                ],
                "summary": "Delete DocumentResourceTool",
                "description": "Delete DocumentResourceTool",
                "operationId": "deleteDocumentResourceTool",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DocumentResourceTool ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-document-resource-tool/{document_id}": {
            "get": {
                "tags": [
                    "DocumentResourceTool"
                ],
                "summary": "getUserDocumentResourceTool",
                "description": "getUserDocumentResourceTool",
                "operationId": "getUserDocumentResourceTool",
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "path",
                        "description": "Documents ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-multiple-restore": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Post DocumentsRestore",
                "description": "Post DocumentsRestore",
                "operationId": "postDocumentRestore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentRestoreFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-share/{id}": {
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "Post DocumentsShare",
                "description": "Post DocumentsShare",
                "operationId": "postDocumentShare",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentShareFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signed-documents": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "signedDocuments",
                "description": "signedDocuments",
                "operationId": "signedDocuments",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-statistics": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "documentStatistics",
                "description": "documentStatistics",
                "operationId": "documentStatistics",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-templates": {
            "get": {
                "tags": [
                    "DocumentTemplate"
                ],
                "summary": "Create a DocumentTemplate",
                "description": "Create a DocumentTemplate",
                "operationId": "DocumentTemplate",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "DocumentTemplate"
                ],
                "summary": "Post DocumentTemplate",
                "description": "Post DocumentTemplate",
                "operationId": "postDocumentTemplate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentTemplateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-templates/{id}": {
            "get": {
                "tags": [
                    "DocumentTemplate"
                ],
                "summary": "Show DocumentTemplate",
                "description": "Show DocumentTemplate",
                "operationId": "showDocumentTemplate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DocumentTemplate ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DocumentTemplate"
                ],
                "summary": "Delete DocumentTemplate",
                "description": "Delete DocumentTemplate",
                "operationId": "deleteDocumentTemplate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DocumentTemplate ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-template-convert/{id}": {
            "get": {
                "tags": [
                    "DocumentTemplate"
                ],
                "summary": "Show DocumentTemplateConvert",
                "description": "Show DocumentTemplateConvert",
                "operationId": "showDocumentTemplateConvert",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DocumentTemplate ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/documents-temporal-deleted": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "show Document Deleted",
                "description": "show Document Deleted",
                "operationId": "allDocumentsDeleted",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/documents-test": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Create a new Document",
                "description": "Create a new Document",
                "operationId": "allDocumentTest",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Post Documents",
                "description": "Post Documents",
                "operationId": "postDocumentTest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/documents-test/{id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Show Documents",
                "description": "Show Documents",
                "operationId": "showDocumentsTest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Documents ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "Update Documents",
                "description": "Update Documents",
                "operationId": "updateDocumentsTest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Documents ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDocumentFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-test/{id}": {
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Delete Document",
                "description": "Delete Document",
                "operationId": "deleteDocumentTest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/unsigned-documents": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "unsignedDocuments",
                "description": "unsignedDocuments",
                "operationId": "unsignedDocuments",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/documents-uploads": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Post Document Upload",
                "description": "Post Document Upload",
                "operationId": "postDocumentUpload",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentUploadFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-upload-convert": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Post Documents Upload Convert",
                "description": "Post Documents Upload Convert",
                "operationId": "postDocumentUploadConvert",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentUploadConvertFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-refactor-urls": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Create a DocumentRefactorURls",
                "description": "Create a DocumentRefactorURls",
                "operationId": "DocumentRefactorURls",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/document-user-check/{email}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Show User Document",
                "description": "Show User Document",
                "operationId": "showDocumentChek",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "User Email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/feedback": {
            "post": {
                "tags": [
                    "Feedbacks"
                ],
                "summary": "Post Feedbacks",
                "description": "Post Feedbacks",
                "operationId": "postFeedback",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreFeedbackFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/countries": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get all countries",
                "description": "Get all countries",
                "operationId": "allCountries",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/countries/{id}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Show CountryStates",
                "description": "Show CountryStates",
                "operationId": "showCountryStates",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/states/{id}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get all cities in a state",
                "description": "Get all cities in a state",
                "operationId": "state_by_id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "State ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/v1/notary/dashboard": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "summary": "Dashboard of a registered notary",
                "description": "Dashboard of a registered notary",
                "operationId": "notaryDashboard",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/calendar": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "summary": "Get notary calendar",
                "description": "get notary calendar",
                "operationId": "notaryCalendar",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notary"
                ],
                "summary": "Post postNotaryCalendar",
                "description": "Post postNotaryCalendar",
                "operationId": "postNotaryCalendar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreNotaryCalendarScheduleFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/notary-document-multiple-delete": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Post NotaryDocumentDelete",
                "description": "Post NotaryDocumentDelete",
                "operationId": "postNotaryDocumentDelete",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentDeleteFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/notary-list?per_page={per_page}": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "summary": "Get notary list",
                "description": "get notary list",
                "operationId": "notaryList",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "description": "Date",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "time",
                        "in": "path",
                        "description": "Time",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "path",
                        "description": "per_page",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/notary-list/{id}": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "summary": "Show NotaryProfile",
                "description": "Show NotaryProfile",
                "operationId": "showNotaryProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "NotaryProfile ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/notary-locker": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "summary": "Get notary locker",
                "description": "get notary locker",
                "operationId": "notaryLocker",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notary"
                ],
                "summary": "Post NotaryLocker",
                "description": "Post NotaryLocker",
                "operationId": "postNotaryLocker",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreNotaryLockerFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/notary-locker/{id}": {
            "delete": {
                "tags": [
                    "Notary"
                ],
                "summary": "Delete NotaryLocker",
                "description": "Delete NotaryLocker",
                "operationId": "deleteNotaryLocker",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "NotaryLocker ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/notary-otp-locker": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "summary": "Get notary otp locker",
                "description": "get notary otp locker",
                "operationId": "notaryOtpLocker",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notary"
                ],
                "summary": "Verify Otp of a notaty locker",
                "description": "Verify Otp of a notaty locker",
                "operationId": "lockerVerifyViaOTP",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerificationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/document-template-prepare/{id}": {
            "get": {
                "tags": [
                    "DocumentTemplate"
                ],
                "summary": "Show DocumentTemplatePrepare",
                "description": "Show DocumentTemplatePrepare",
                "operationId": "showDocumentTemplatePrepare",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DocumentTemplate ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/notary-requests": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "summary": "Get all Scheduled request",
                "description": "get Scheduled request",
                "operationId": "allNotaryScheduledRequest",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/notary-requests/{id}": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "summary": "Show showNotaryRequest",
                "description": "Show showNotaryRequest",
                "operationId": "showNotaryRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "showNotaryRequest ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/notary-virtual-session-today": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Get all Scheduled request today",
                "description": "get Scheduled request today",
                "operationId": "allNotaryScheduledRequestToday",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/document-templates": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "summary": "Create a Notary Template",
                "description": "Create a DocumentTemplate",
                "operationId": "NotaryDocumentTemplate",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notary"
                ],
                "summary": "Post DocumentTemplate",
                "description": "Post DocumentTemplate",
                "operationId": "postNotaryDocumentTemplate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentTemplateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/document-templates/{id}": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "summary": "Show NotaryDocumentTemplate",
                "description": "Show NotaryDocumentTemplate",
                "operationId": "showNotaryDocumentTemplate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "NotaryDocumentTemplate ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/update-request-status/{id}": {
            "put": {
                "tags": [
                    "Notary"
                ],
                "summary": "Update status on scheduleSessionrequest",
                "description": "Update status on scheduleSessionrequest",
                "operationId": "updateScheduleSession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "scheduleSessionRequest ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateNotaryScheduleRequestFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary/users-requests": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "summary": "Get all Users Scheduled request",
                "description": "get Users Scheduled request",
                "operationId": "allUsersRequest",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/payment-gateways": {
            "get": {
                "tags": [
                    "UserPaymentGateway"
                ],
                "summary": "All PaymentGateways",
                "description": "All PaymentGateways",
                "operationId": "allPaymentGateways",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserPaymentGateway"
                ],
                "summary": "Post UserPaymentGateway",
                "description": "Post UserPaymentGateway",
                "operationId": "postUserPaymentGateway",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserPaymentGatewayFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cancel-subscription": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "cancelPlanSubscription",
                "description": "cancelPlanSubscription",
                "operationId": "cancelPlanSubscription",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notary-pack-plans": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "All NotaryPackPlans",
                "description": "All NotaryPackPlans",
                "operationId": "allNotaryPackPlans",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/plans": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "All Active plans",
                "description": "All Active plans",
                "operationId": "allPlansActivePlan",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/subscription-plans": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "All plans",
                "description": "All plans",
                "operationId": "allPlans",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Plans"
                ],
                "summary": "Post Plans",
                "description": "Post Plans",
                "operationId": "postPlans",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostSubscriptionFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/ticket": {
            "post": {
                "tags": [
                    "Plans"
                ],
                "summary": "postGiveTicket",
                "description": "postGiveTicket",
                "operationId": "postGiveTicket",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAddTicketsFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/trial-plans": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "All allTrialPlans",
                "description": "All allTrialPlans",
                "operationId": "allTrialPlans",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/scheduled-requests": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Get all Scheduled request",
                "description": "get Scheduled request",
                "operationId": "allScheduledRequest",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/custom-affidavit-request/{id}": {
            "put": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Update CustomAffidavitRequest",
                "description": "Update CustomAffidavitRequest",
                "operationId": "updateCustomAffidavitRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CustomAffidavitRequest ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCustomAffidavitRequestFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/request-affidavits-upload": {
            "post": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Post RequestAffidavitsUpload",
                "description": "Post RequestAffidavitsUpload",
                "operationId": "postRequestAffidavitsUpload",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentNotaryUploadFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/request-affidavits": {
            "post": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Post RequestAffidavits",
                "description": "Post RequestAffidavits",
                "operationId": "postRequestAffidavits",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRequestAffidavitFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/schedule-recording-session": {
            "post": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Post ScheduleRecordingSession",
                "description": "Post ScheduleRecordingSession",
                "operationId": "postScheduleRecordingSession",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreScheduleRecordingSessionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/schedule-recording-session/{id}": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Show ScheduleRecordingSession",
                "description": "Show ScheduleRecordingSession",
                "operationId": "showScheduleRecordingSession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Schedule ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Update ScheduleRecordingSession",
                "description": "Update ScheduleRecordingSession",
                "operationId": "updateScheduleRecordingSession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Schedule ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateScheduleRecordingSessionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/virtual-session-monetary-value/{id}": {
            "put": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Update VirtualSessionMonetaryValue",
                "description": "Update VirtualSessionMonetaryValue",
                "operationId": "updateVirtualSessionMonetaryValue",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VirtualSession ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateScheduleMonetaryValueFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/time-slots": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Get a time slots",
                "description": "get a time slots",
                "operationId": "timeslots",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/schedules": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Create a new Schedule",
                "description": "Create a new Schedule",
                "operationId": "createSelfSchedule",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Post Schedule",
                "description": "Post Schedule",
                "operationId": "postSchedule",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserScheduleFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/schedules/{id}": {
            "delete": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Delete Schedule",
                "description": "Delete Schedule",
                "operationId": "deleteSchedule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Schedule ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/request-virtual-session": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Get all Scheduled request",
                "description": "get Scheduled request",
                "operationId": "allVirtualScheduledRequest",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Post postVirtualSession",
                "description": "Post postVirtualSession",
                "operationId": "postVirtualSession",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreVitrualScheduleSessionFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/request-virtual-session/{id}": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Show VirtualSession",
                "description": "Show VirtualSession",
                "operationId": "showVirtualSession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VirtualSession ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Update VirtualSession",
                "description": "Update VirtualSession",
                "operationId": "updateVirtualSession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VirtualSession ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVirtualScheduleSessionFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/virtual-session-credit/{id}": {
            "put": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Update VirtualSessionCredit",
                "description": "Update VirtualSessionCredit",
                "operationId": "updateVirtualSessionCredit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VirtualSession ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVirtualScheduleSessionCreditFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/request-virtual-session-today": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Get all Scheduled request today",
                "description": "get Scheduled request today",
                "operationId": "allVirtualScheduledRequestToday",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/request-participants-on-call/{id}": {
            "put": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Update irtualSessionParticipantsOnCall",
                "description": "Update VirtualSessionParticipantsOnCall",
                "operationId": "updateVirtualSessionParticipantsOnCall",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VirtualSession ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateScheduleSessionWhileOnCallRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/prints": {
            "get": {
                "tags": [
                    "Prints"
                ],
                "summary": "Create a new Print",
                "description": "Create a new Print",
                "operationId": "createSelfPrint",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Prints"
                ],
                "summary": "Post Prints",
                "description": "Post Prints",
                "operationId": "postPrints",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePrintFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/prints/{id}": {
            "get": {
                "tags": [
                    "Prints"
                ],
                "summary": "showPrints",
                "description": "showPrints",
                "operationId": "showPrints",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Print ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Prints"
                ],
                "summary": "Update TextPrints",
                "description": "Update TextPrints",
                "operationId": "updateTextPrints",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Text Prints ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePrintFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Prints"
                ],
                "summary": "Delete Prints",
                "description": "Delete Prints",
                "operationId": "deletePrint",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Prints ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/prints-set-default/{id}": {
            "get": {
                "tags": [
                    "Prints"
                ],
                "summary": "showPrintsSetDefault",
                "description": "showPrintsSetDefault",
                "operationId": "showPrintsDefault",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Print ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signlink-annotations": {
            "post": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Post SignlinkAnnotation",
                "description": "Post SignlinkAnnotation",
                "operationId": "postSignlinkAnnotation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSignlinkAnnotationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signlink-annotations/{id}": {
            "get": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Show SignlinkAnnotation",
                "description": "Show SignlinkAnnotation",
                "operationId": "showSignlinkAnnotation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Documents ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Update SignlinkAnnotation",
                "description": "Update SignlinkAnnotation",
                "operationId": "updateSignlinkAnnotation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SignlinkAnnotation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSignlinkAnnotationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Delete SignlinkAnnotation",
                "description": "Delete SignlinkAnnotation",
                "operationId": "deleteSignlinkAnnotation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SignlinkAnnotation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signlink-documents": {
            "get": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Create a new Signlink Document",
                "description": "Create a new Signlink Document",
                "operationId": "allSignlinkDocuments",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Post SignlinkDocuments",
                "description": "Post SignlinkDocuments",
                "operationId": "postSignlinkDocuments",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSignlinkDocumentsFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signlink-documents/{id}": {
            "get": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Show SignlinkDocuments",
                "description": "Show SignlinkDocuments",
                "operationId": "showSignlinkDocuments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SignlinkDocuments ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Update SignlinkDocuments",
                "description": "Update SignlinkDocuments",
                "operationId": "updateSignlinkDocuments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SignlinkDocuments ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSignlinkDocumentsFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Delete SignlinkDocuments",
                "description": "Delete SignlinkDocuments",
                "operationId": "deleteSignlinkDocuments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SignlinkDocuments ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signlink-complete/{id}": {
            "put": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "CompleteSignlinkDocument",
                "description": "CompleteSignlinkDocument",
                "operationId": "completeSignlinkDocument",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document Signlink ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSignlinkUserFormDataFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signlink-public-annotation/{id}": {
            "put": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Update SignlinkDocuments",
                "description": "Update SignlinkDocuments",
                "operationId": "updatePublicSignlinkDocuments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SignlinkDocuments ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePublicAnnotationSignlinkDocumentsFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signlink-public-sign/{id}": {
            "get": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Show SignlinkDocuments",
                "description": "Show SignlinkDocuments",
                "operationId": "showPublicSignlinkDocuments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SignlinkDocuments ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signlink-annotation-tools/{document_id}": {
            "get": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "getSignlinkrDocumentResourceTool",
                "description": "getSignlinkDocumentResourceTool",
                "operationId": "getSignlinkDocumentResourceTool",
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "path",
                        "description": "signlink ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signlink-responses/{id}": {
            "get": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Show SignlinkDocumentsResponses",
                "description": "Show SignlinkDocumentsResponses",
                "operationId": "showSignlinkDocumentsResponses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SignlinkDocuments ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signlink-public-state/{id}": {
            "get": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Show SignlinkDocumentState",
                "description": "Show SignlinkDocumentState",
                "operationId": "showSignlinkDocumentState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SignlinkDocumentState ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signlink-share-link/{id}": {
            "put": {
                "tags": [
                    "SignlinkDocuments"
                ],
                "summary": "Post SignlinkShare",
                "description": "Post SignlinkShare",
                "operationId": "postSignlinkShare",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentShareFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/restore-team-user/{id}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Show RestoreTeamUser",
                "description": "Show RestoreTeamUser",
                "operationId": "showRestoreTeamUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/teams": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Create a new Team",
                "description": "Create a new Team",
                "operationId": "createTeam",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "updateTeam",
                "description": "updateTeam",
                "operationId": "updateTeam",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTeamFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/team-settings": {
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "updateTeamSetting",
                "description": "updateTeamSetting",
                "operationId": "updateTeamSetting",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTeamSettingFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/team-switch/{id}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Switch Teams",
                "description": "Switch Teams",
                "operationId": "switchTeams",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Teams ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/team-users": {
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "Post TeamUser",
                "description": "Post TeamUser",
                "operationId": "postTeamUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTeamFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/team-users/{id}": {
            "delete": {
                "tags": [
                    "Teams"
                ],
                "summary": "Delete TeamUsers",
                "description": "Delete TeamUsers",
                "operationId": "deleteTeamUsers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Users ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/paywithcard": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "postPayWithCards",
                "description": "postPayWithCards",
                "operationId": "postPayWithCards",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCardFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/transactions": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "transactions",
                "description": "transactions",
                "operationId": "transactions",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "postTransactions",
                "description": "postTransactions",
                "operationId": "postTransactions",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTransactionFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/transactions/{id}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "showTransactions",
                "description": "showTransactions",
                "operationId": "showTransactions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Transaction"
                ],
                "summary": "updateTransactions",
                "description": "updateTransactions",
                "operationId": "updateTransactions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/unauthenticated-documents": {
            "post": {
                "tags": [
                    "Unauthenticated"
                ],
                "summary": "Post Unauthenticated Documents",
                "description": "Post Unauthenticated Documents",
                "operationId": "postUnauthenticatedDocument",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDocumentFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/unauthenticated-documents/{id}": {
            "get": {
                "tags": [
                    "Unauthenticated"
                ],
                "summary": "Show Unauthenticated Documents",
                "description": "Show Unauthenticated Documents",
                "operationId": "showUnauthenticatedDocuments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Documents ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/verification/user-company-verification": {
            "post": {
                "tags": [
                    "Verification"
                ],
                "summary": "Post CompanyVerification",
                "description": "Post CompanyVerification",
                "operationId": "postCompanyVerification",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreQoreIdCompanyFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/verification/user-face-match": {
            "post": {
                "tags": [
                    "Verification"
                ],
                "summary": "Post FaceMatchVerification",
                "description": "Post FaceMatchVerification",
                "operationId": "postFaceMatchVerification",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreQoreIdFaceMatchVerificationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AddressCreateFormRequest": {
                "title": "Address Create Form Request Fields",
                "description": "Address Create Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "name": {
                        "title": "User First Name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "Nnamdi"
                    },
                    "address": {
                        "title": "User Address",
                        "description": "Address of the user",
                        "type": "string",
                        "example": "No 4 Gang street"
                    },
                    "postal_code": {
                        "title": "User postal_code",
                        "description": "postal_code of the user",
                        "type": "string",
                        "example": "900233"
                    },
                    "country_id": {
                        "title": "User Country",
                        "description": "country of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "state_id": {
                        "title": "User State",
                        "description": "state of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "city_id": {
                        "title": "User City",
                        "description": "City of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "primary_address": {
                        "title": "User primary address",
                        "description": "primary address of the user",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "AddressUpdateFormRequest": {
                "title": "Address Update Form Request Fields",
                "description": "Address Update Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "name": {
                        "title": "User First Name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "Nnamdi"
                    },
                    "address": {
                        "title": "User Address",
                        "description": "Address of the user",
                        "type": "string",
                        "example": "No 4 Gang street"
                    },
                    "postal_code": {
                        "title": "User postal_code",
                        "description": "postal_code of the user",
                        "type": "string",
                        "example": "900233"
                    },
                    "country_id": {
                        "title": "User Country",
                        "description": "country of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "state_id": {
                        "title": "User State",
                        "description": "state of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "city_id": {
                        "title": "User City",
                        "description": "City of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "primary_address": {
                        "title": "User primary address",
                        "description": "primary address of the user",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "RegistrationFormRequest": {
                "title": "Address Create Form Request Fields",
                "description": "Address Create Form request body data",
                "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "phone",
                    "company",
                    "job_title",
                    "more_info",
                    "partner_type"
                ],
                "properties": {
                    "first_name": {
                        "title": "First name",
                        "description": "First name of registrant",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "Last name",
                        "description": "Last name of user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email address",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com",
                        "nullable": true
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone number",
                        "type": "string",
                        "example": "0803123457068"
                    },
                    "company": {
                        "title": "Company",
                        "description": "Name of company",
                        "type": "string",
                        "example": "ToNote Tech Ltd"
                    },
                    "job_title": {
                        "title": "Job title",
                        "description": "The job title of the person applying",
                        "type": "string",
                        "example": "Sales officer"
                    },
                    "more_info": {
                        "title": "More info",
                        "description": "The 'Tell us more' field data",
                        "type": "string",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                    },
                    "partner_type": {
                        "title": "Partnership type",
                        "description": "How the applicant wants to partner with us. Check the api/v1/affiliates/partner-types for the options",
                        "type": "integer",
                        "example": "0"
                    }
                },
                "type": "object"
            },
            "AgoraSessionTokenFormRequest": {
                "title": "Agora session Form Request Fields",
                "description": "Agora session Form request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "user_id": {
                        "title": "User Id",
                        "description": "id of the user",
                        "type": "string",
                        "example": "user_id"
                    },
                    "role": {
                        "title": "User Role",
                        "description": "User Role",
                        "type": "string",
                        "example": "role"
                    },
                    "channel_name": {
                        "title": "channel_name",
                        "description": "channel_name",
                        "type": "string",
                        "example": "Notary"
                    }
                },
                "type": "object"
            },
            "StoreAuditTrailActionFormRequest": {
                "title": "Audit trail Create Form Request Fields",
                "description": "Audit trail Create Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "action": {
                        "title": "action",
                        "description": "action",
                        "type": "string",
                        "example": "JoinSession|LeftSession|StartSession|EndSession|StartRecording|EndRecording"
                    },
                    "user_id": {
                        "title": "user_id",
                        "description": "user_id",
                        "type": "string",
                        "example": "Untitled"
                    }
                },
                "type": "object"
            },
            "AuthUpdateFormRequest": {
                "title": "User Update Form Request Fields",
                "description": "User Update request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "first_name": {
                        "title": "First Name",
                        "description": "first name of the user",
                        "type": "string",
                        "example": "Bronx"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "description": "Last name of the user",
                        "type": "string",
                        "example": "Bronx"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "phone of the user",
                        "type": "string",
                        "example": "+23400233300"
                    },
                    "gender": {
                        "title": "gender",
                        "description": "gender of the user",
                        "type": "string",
                        "example": "m/f/o"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address of the user",
                        "type": "string",
                        "example": "No 5 Jesus Street"
                    },
                    "dob": {
                        "title": "dob",
                        "description": "date of birth",
                        "type": "string",
                        "example": "1994-49-33"
                    },
                    "notary_commission_number": {
                        "title": "Notary Commission Number",
                        "description": "Notary Commission Number of the notary",
                        "type": "string",
                        "example": "39403940349"
                    },
                    "country_id": {
                        "title": "Country Id",
                        "description": "Country id",
                        "type": "string",
                        "example": "39403940349"
                    },
                    "state_id": {
                        "title": "state Id",
                        "description": "state id",
                        "type": "string",
                        "example": "39403940349"
                    },
                    "city_id": {
                        "title": "city Id",
                        "description": "city id",
                        "type": "string",
                        "example": "39403940349"
                    },
                    "is_online": {
                        "title": "is_online",
                        "description": "is_online",
                        "type": "string",
                        "example": "true/false"
                    }
                },
                "type": "object"
            },
            "ChangePasswordFormRequest": {
                "title": "Change password Update Form Request Fields",
                "description": "Change password Update request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "current_password": {
                        "title": "User Current  password",
                        "description": " Current Password of the user",
                        "type": "string",
                        "example": "password"
                    },
                    "password": {
                        "title": "User New  password",
                        "description": " New Password of the user",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "DocumentPasswordChangeFormRequest": {
                "title": "Docs password Form Request Fields",
                "description": "Docs password request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "email",
                        "type": "string",
                        "example": "email"
                    },
                    "document_id": {
                        "title": "document_id",
                        "description": "document_id",
                        "type": "string",
                        "example": "password"
                    },
                    "document_otp": {
                        "title": "User Current  document otp",
                        "description": " Current document otp",
                        "type": "string",
                        "example": "password"
                    },
                    "password": {
                        "title": "User New  password",
                        "description": " New Password of the user",
                        "type": "string",
                        "example": "new_password"
                    }
                },
                "type": "object"
            },
            "ForgotPasswordFormRequest": {
                "title": "Sign in Form Request Fields",
                "description": "sign in request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "title": "User reset email",
                        "description": "Reset email of the user",
                        "type": "string",
                        "example": "info@tonote.com"
                    }
                },
                "type": "object"
            },
            "GoogleAuthFormRequest": {
                "title": "Google Sign in Form Request Fields",
                "description": "Google sign in request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "token": {
                        "title": "User token",
                        "description": "auth_code of the user",
                        "type": "string",
                        "example": "token"
                    }
                },
                "type": "object"
            },
            "ResendVerificationEmailFormRequest": {
                "title": "User Resend OTP Form Request Fields",
                "description": "User Resend OTP request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "email": {
                        "title": "User reset email",
                        "description": "Reset email of the user",
                        "type": "string",
                        "example": "info@tonote.com"
                    }
                },
                "type": "object"
            },
            "ResetPasswordRequest": {
                "title": "Sign in Form Request Fields",
                "description": "sign in request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "title": "User reset email",
                        "description": "Reset email of the user",
                        "type": "string",
                        "example": "info@tonote.com"
                    },
                    "token": {
                        "title": "User token email",
                        "description": "token email of the user",
                        "type": "string",
                        "example": "nciwo3939320393dweiodwe"
                    },
                    "password": {
                        "title": "new user password",
                        "description": "new password of the user",
                        "type": "string",
                        "example": "password"
                    },
                    "password_confirmation": {
                        "title": "retype user password",
                        "description": "nretype new password of the user",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "SessionOtpVerificationFormRequest": {
                "title": "User Virtual Session Verify OTP Form Request Fields",
                "description": "User Virtual Session Verify OTP request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "email": {
                        "title": "User reset email",
                        "description": "Reset email of the user",
                        "type": "string",
                        "example": "info@tonote.com"
                    },
                    "password": {
                        "title": "User OTP Password",
                        "description": "User OTP Password",
                        "type": "string",
                        "example": "56777"
                    },
                    "session_id": {
                        "title": "session_id",
                        "description": "session_id",
                        "type": "string",
                        "example": "Untitled"
                    }
                },
                "type": "object"
            },
            "SessionResendOtpFormRequest": {
                "title": "Virtual Notary OTP Resend",
                "description": "Virtual Notary OTP Resend",
                "required": [
                    "email",
                    "session_id"
                ],
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "info@tonote.com"
                    },
                    "session_id": {
                        "title": "Session_id",
                        "description": "Session ID",
                        "type": "string",
                        "example": "string"
                    }
                },
                "type": "object"
            },
            "StoreDocumentResendOtpFormRequest": {
                "title": "User Document Resend OTP Form Request Fields",
                "description": "User Document Resend OTP request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "email": {
                        "title": "User reset email",
                        "description": "Reset email of the user",
                        "type": "string",
                        "example": "info@tonote.com"
                    },
                    "document_id": {
                        "title": "document_id",
                        "description": "document_id",
                        "type": "string",
                        "example": "Untitled"
                    }
                },
                "type": "object"
            },
            "StoreDocumentVerificationFormRequest": {
                "title": "User Document Verify OTP Form Request Fields",
                "description": "User Document Verify OTP request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "email": {
                        "title": "User reset email",
                        "description": "Reset email of the user",
                        "type": "string",
                        "example": "info@tonote.com"
                    },
                    "password": {
                        "title": "User OTP Password",
                        "description": "User OTP Password",
                        "type": "string",
                        "example": "56777"
                    },
                    "document_id": {
                        "title": "document_id",
                        "description": "document_id",
                        "type": "string",
                        "example": "Untitled"
                    }
                },
                "type": "object"
            },
            "UserLoginFormRequest": {
                "title": "Sign in Form Request Fields",
                "description": "sign in request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "title": "User email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "user@tonote.com"
                    },
                    "password": {
                        "title": "User password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password"
                    },
                    "entry_point": {
                        "title": "User entry point",
                        "description": "entry point of the user",
                        "type": "string",
                        "example": "User"
                    }
                },
                "type": "object"
            },
            "UserRegistrationFormRequest": {
                "title": "Sign Up Form Request Fields",
                "description": "sign up request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "first_name": {
                        "title": "first_name",
                        "description": "first_name of the user",
                        "type": "string",
                        "example": "Schneider"
                    },
                    "last_name": {
                        "title": "last_name",
                        "description": "last_name of the user",
                        "type": "string",
                        "example": "Schneider"
                    },
                    "role": {
                        "title": "User Role",
                        "description": "User/Admin/Company/Notary",
                        "type": "string",
                        "example": "User"
                    },
                    "email": {
                        "title": "User email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "info@tonote.com"
                    },
                    "password": {
                        "title": "User password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password"
                    },
                    "referral_code": {
                        "title": "referral_code",
                        "description": "referral_code of the user",
                        "type": "string",
                        "example": "referral_code"
                    }
                },
                "type": "object"
            },
            "VerificationFormRequest": {
                "title": "User Verify OTP Form Request Fields",
                "description": "User Verify OTP request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "email": {
                        "title": "User reset email",
                        "description": "Reset email of the user",
                        "type": "string",
                        "example": "info@tonote.com"
                    },
                    "otp": {
                        "title": "User OTP",
                        "description": "User OTP",
                        "type": "string",
                        "example": "56777"
                    },
                    "channel": {
                        "title": "User channel",
                        "description": "User channel",
                        "type": "string",
                        "example": "document"
                    }
                },
                "type": "object"
            },
            "BankDetailCreateFormRequest": {
                "title": "Bank Details Create Form Request Fields",
                "description": "Bank Details Create Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "bank_id": {
                        "title": "Bank ID",
                        "description": "Bank ID",
                        "type": "integer",
                        "example": "1c9d5993-bf37-417b-b57a-c830fc9e7e2f"
                    },
                    "bank_account_name": {
                        "title": "Bank Account Name",
                        "description": "Bank Account Name",
                        "type": "string",
                        "example": "quote"
                    },
                    "bank_account_number": {
                        "title": "Bank Account Number",
                        "description": "Bank Account Number",
                        "type": "string",
                        "example": "quote"
                    }
                },
                "type": "object"
            },
            "BankDetailUpdateFormRequest": {
                "title": "Bank Details Update Form Request Fields",
                "description": "Bank Details Update Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "bank_account_name": {
                        "title": "Bank Account Name",
                        "description": "Bank Account Name",
                        "type": "string",
                        "example": "quote"
                    },
                    "bank_account_number": {
                        "title": "Bank Account Number",
                        "description": "Bank Account Number",
                        "type": "string",
                        "example": "quote"
                    }
                },
                "type": "object"
            },
            "StoreCardFormRequest": {
                "title": "Pay with card Form Request Fields",
                "description": "Pay with card request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "transaction_id": {
                        "title": "transaction_id",
                        "description": "transaction_id",
                        "type": "string",
                        "example": "transaction_id"
                    },
                    "recurring_transaction_id": {
                        "title": "recurring_transaction_id",
                        "description": "recurring_transaction_id",
                        "type": "string",
                        "example": "recurring_transaction_id"
                    }
                },
                "type": "object"
            },
            "UpdateCardFormRequest": {
                "title": "Update Pay with card Form Request Fields",
                "description": "Update Pay with card request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "recurring_transaction_id": {
                        "title": "recurring_transaction_id",
                        "description": "recurring_transaction_id",
                        "type": "string",
                        "example": "recurring_transaction_id"
                    }
                },
                "type": "object"
            },
            "StoreCompanyLoginFormRequest": {
                "title": "Company Sign in Form Request Fields",
                "description": "Company sign in request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "title": "User email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "user@tonote.com"
                    },
                    "password": {
                        "title": "User password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password"
                    },
                    "role": {
                        "title": "User role",
                        "description": "password of the user",
                        "type": "string",
                        "example": "Company"
                    }
                },
                "type": "object"
            },
            "StoreCompanyRegisterFormRequest": {
                "title": "Company Register Form Request Fields",
                "description": "Company Register request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "first_name": {
                        "title": "first_name",
                        "description": "first_name of the user",
                        "type": "string",
                        "example": "Schneider"
                    },
                    "last_name": {
                        "title": "last_name",
                        "description": "last_name of the user",
                        "type": "string",
                        "example": "Schneider"
                    },
                    "email": {
                        "title": "User email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "info@tonote.com"
                    },
                    "password": {
                        "title": "User password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password"
                    },
                    "referral_code": {
                        "title": "referral_code",
                        "description": "referral_code of the user",
                        "type": "string",
                        "example": "referral_code"
                    },
                    "company_name": {
                        "title": "company_name",
                        "description": "company_name of the user",
                        "type": "string",
                        "example": "company_name"
                    },
                    "role": {
                        "title": "User role",
                        "description": "password of the user",
                        "type": "string",
                        "example": "3"
                    }
                },
                "type": "object"
            },
            "UpdateCompanyFormRequest": {
                "title": "Update company Document Participant Form Request Fields",
                "description": "Update company Participant request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "company_name": {
                        "title": "company name Id",
                        "description": "company name  id",
                        "type": "string",
                        "example": "Schneider and sons"
                    },
                    "type": {
                        "title": "company name Id",
                        "description": "company name  id",
                        "type": "string",
                        "example": "Schneider and sons"
                    },
                    "registration_company_number": {
                        "title": "company name Id",
                        "description": "company name  id",
                        "type": "string",
                        "example": "Schneider and sons"
                    },
                    "phone": {
                        "title": "phone",
                        "description": "phone",
                        "type": "string",
                        "example": "08038893893"
                    },
                    "email": {
                        "title": "company name Id",
                        "description": "company name  id",
                        "type": "string",
                        "example": "schneider@rnei.xom"
                    },
                    "logo": {
                        "title": "company name",
                        "description": "company name ",
                        "type": "string",
                        "example": "logobase64"
                    },
                    "address": {
                        "title": "address",
                        "description": "address",
                        "type": "string",
                        "example": "Schneider and sons street"
                    },
                    "country_id": {
                        "title": "Country Id",
                        "description": "Country id",
                        "type": "string",
                        "example": "39403940349"
                    },
                    "state_id": {
                        "title": "state Id",
                        "description": "state id",
                        "type": "string",
                        "example": "39403940349"
                    },
                    "city_id": {
                        "title": "city Id",
                        "description": "city id",
                        "type": "string",
                        "example": "39403940349"
                    }
                },
                "type": "object"
            },
            "UpdateComplianceResponseFormRequest": {
                "title": "Update Compliance Answers Form Request Fields",
                "description": "Update Compliance Answers Form request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "answers": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "answer": {
                                    "type": "string",
                                    "example": "Yes/No"
                                },
                                "notary_id": {
                                    "type": "string",
                                    "example": "notary_id"
                                },
                                "document_id": {
                                    "type": "string",
                                    "example": "document_id"
                                },
                                "schedule_id": {
                                    "type": "string",
                                    "example": "schedule_id"
                                },
                                "compliance_question_id": {
                                    "type": "string",
                                    "example": "compliance_question_id"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "DocumentParticipantFormRequest": {
                "title": "Store Document Participant Form Request Fields",
                "description": "Store Document Participant request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "participants": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "document_id": {
                                    "type": "string",
                                    "example": "seatbelt holder"
                                },
                                "first_name": {
                                    "type": "string",
                                    "example": "Ojo"
                                },
                                "last_name": {
                                    "type": "string",
                                    "example": "Ojo"
                                },
                                "phone": {
                                    "type": "string",
                                    "example": "07033839229"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "ojo@finrs.com"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "Signer,Viewer,Approver"
                                },
                                "entry_point": {
                                    "type": "string",
                                    "example": "Video,Notary"
                                },
                                "message": {
                                    "type": "boolean",
                                    "example": "false"
                                },
                                "sequence_order": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "approval_sequence_order": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "signing_sequence_order": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "has_sequence_order": {
                        "title": "has_sequence_order",
                        "description": "has_sequence_order",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "DocumentParticipantSendMailFormRequest": {
                "title": "Send Mail Document Participant Form Request Fields",
                "description": "Send Mail Document Participant Form request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "seatbelt holder"
                    },
                    "files": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "['file1','file2','file3']"
                    },
                    "participants": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "document_id": {
                                    "type": "string",
                                    "example": "seatbelt holder"
                                },
                                "first_name": {
                                    "type": "string",
                                    "example": "Ojo"
                                },
                                "last_name": {
                                    "type": "string",
                                    "example": "Ojo"
                                },
                                "phone": {
                                    "type": "string",
                                    "example": "07033839229"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "ojo@finrs.com"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "Signer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "has_sequence_order": {
                        "title": "has_sequence_order",
                        "description": "has_sequence_order",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "StoreDocumentChildUploadFormRequest": {
                "title": "Create Document Child Upload Form Request Fields",
                "description": "Create Document Child Upload Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "document_id": {
                        "title": "document_id",
                        "description": "document_id",
                        "type": "string",
                        "example": "Untitled"
                    },
                    "parent_id": {
                        "title": "parent_id",
                        "description": "parent_id",
                        "type": "string",
                        "example": "dweded3434"
                    },
                    "file": {
                        "title": "parent_id",
                        "description": "parent_id",
                        "type": "string",
                        "example": "kindly use postman"
                    }
                },
                "type": "object"
            },
            "StoreDocumentDeleteFormRequest": {
                "title": "Store Document Delete Form Request Fields",
                "description": "Store Document Delete Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "documents": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "document_id": {
                                    "type": "string",
                                    "example": "id"
                                },
                                "permanent_delete": {
                                    "type": "boolean",
                                    "example": "false"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StoreDocumentFormRequest": {
                "title": "Admin Store Document Form Request Fields",
                "description": "Admin Store Document Update request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "Untitled"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "example": "title holder"
                                },
                                "entry_point": {
                                    "type": "string",
                                    "example": "Docs"
                                },
                                "file": {
                                    "type": "string",
                                    "example": "base64"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "example": "ids"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "parent_id": {
                        "title": "parent_id",
                        "description": "parent_id",
                        "type": "string",
                        "example": "parent_document_id"
                    },
                    "has_reminder": {
                        "title": "has_reminder",
                        "description": "has_reminder",
                        "type": "boolean",
                        "example": "true"
                    },
                    "reminder_frequency": {
                        "title": "reminder_frequency",
                        "description": "reminder_frequency",
                        "type": "string",
                        "example": "1"
                    },
                    "has_approval_sequence": {
                        "title": "has_approval_sequence",
                        "description": "has_approval_sequence",
                        "type": "boolean",
                        "example": "true"
                    },
                    "has_signing_sequence": {
                        "title": "has_signing_sequence",
                        "description": "has_signing_sequence",
                        "type": "boolean",
                        "example": "true"
                    },
                    "has_sequence_order": {
                        "title": "has_sequence_order",
                        "description": "has_sequence_order",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "StoreDocumentLockerFormRequest": {
                "title": "Store User Locker Form Request Fields",
                "description": "Store User Locker Update request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "Untitled"
                    },
                    "files": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "['file1','file2','file3']"
                    }
                },
                "type": "object"
            },
            "StoreDocumentParentUploadFormRequest": {
                "title": " Create Document Parent Upload Form Request Fields",
                "description": " Create Document Parent Upload Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "document_id": {
                        "title": "document_id",
                        "description": "document_id",
                        "type": "string",
                        "example": "id"
                    },
                    "file": {
                        "title": "parent_id",
                        "description": "parent_id",
                        "type": "string",
                        "example": "kindly use postman"
                    }
                },
                "type": "object"
            },
            "StoreDocumentParticipantDoneFormRequest": {
                "title": " Create Document Done Form Request Fields",
                "description": " Create Document Done Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "files": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "['file1','file2','file3']"
                    },
                    "status": {
                        "title": "status",
                        "description": "status",
                        "type": "string",
                        "example": "Signed,Approved,Declined"
                    }
                },
                "type": "object"
            },
            "StoreDocumentResourceFormRequest": {
                "title": "Admin Create Document Resource  Tool Form Request Fields",
                "description": "Admin Create Document  Resource Tool Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "document_upload_id": {
                        "title": "Uploaded document page id",
                        "description": "Uploaded document page id",
                        "type": "string",
                        "example": "ids"
                    },
                    "document_id": {
                        "title": " document  id",
                        "description": " document  id",
                        "type": "string",
                        "example": "ids"
                    },
                    "user_id": {
                        "title": "User id",
                        "description": "User id",
                        "type": "string",
                        "example": "ids"
                    },
                    "append_print_id": {
                        "title": "Appending prin document page id",
                        "description": "Uploaded document page id",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_name": {
                        "title": "Frontend Tool names",
                        "description": "Frontend Tool names",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_class": {
                        "title": "Frontend Tool class",
                        "description": "Frontend Tool class",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_height": {
                        "title": "Frontend Tool height",
                        "description": "Frontend Tool height",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_width": {
                        "title": "Frontend Tool weight",
                        "description": "Frontend Tool weight",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_pos_top": {
                        "title": "Frontend Tool position top",
                        "description": "Frontend Tool position top",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_pos_left": {
                        "title": "Frontend Tool position left",
                        "description": "Frontend Tool position left",
                        "type": "string",
                        "example": "ids"
                    },
                    "type": {
                        "title": "value",
                        "description": "type",
                        "type": "string",
                        "example": ""
                    },
                    "category": {
                        "title": "value",
                        "description": "value",
                        "type": "string",
                        "example": ""
                    },
                    "value": {
                        "title": "value",
                        "description": "value",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreDocumentResourceToolFromLocalFormRequest": {
                "title": "Store Document Resource  Tool From Local Form Request Fields",
                "description": "Store Document  Resource Tool From Local Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id",
                        "type": "string",
                        "example": "id"
                    },
                    "document_upload_id": {
                        "title": "Uploaded document page id",
                        "description": "Uploaded document page id",
                        "type": "string",
                        "example": "ids"
                    },
                    "user_id": {
                        "title": "User id",
                        "description": "User id",
                        "type": "string",
                        "example": "ids"
                    },
                    "append_print_id": {
                        "title": "Appending prin document page id",
                        "description": "Uploaded document page id",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_name": {
                        "title": "Frontend Tool names",
                        "description": "Frontend Tool names",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_class": {
                        "title": "Frontend Tool class",
                        "description": "Frontend Tool class",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_height": {
                        "title": "Frontend Tool height",
                        "description": "Frontend Tool height",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_width": {
                        "title": "Frontend Tool weight",
                        "description": "Frontend Tool weight",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_pos_top": {
                        "title": "Frontend Tool position top",
                        "description": "Frontend Tool position top",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_pos_left": {
                        "title": "Frontend Tool position left",
                        "description": "Frontend Tool position left",
                        "type": "string",
                        "example": "ids"
                    },
                    "type": {
                        "title": "value",
                        "description": "type",
                        "type": "string",
                        "example": ""
                    },
                    "category": {
                        "title": "value",
                        "description": "value",
                        "type": "string",
                        "example": ""
                    },
                    "value": {
                        "title": "value",
                        "description": "value",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreDocumentRestoreFormRequest": {
                "title": "Store Document Restore Form Request Fields",
                "description": "Store Document Restore Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "documents": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "document_id": {
                                    "type": "string",
                                    "example": "id"
                                },
                                "permanent_delete": {
                                    "type": "boolean",
                                    "example": "false"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StoreDocumentShareFormRequest": {
                "title": "Store Document Share Form Request Fields",
                "description": "Store Document Share Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "documents": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "document_id": {
                                    "type": "string",
                                    "example": "id"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "schneidershades@gmail.com"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StoreDocumentTemplateFormRequest": {
                "title": "Store Document Template Form Request Fields",
                "description": "Store Document Template Request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "StoreDocumentUploadConvertFormRequest": {
                "title": "Admin Store Document Convert Upload Form Request Fields",
                "description": "Admin Store Document Convert Upload Update request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "Untitled"
                    },
                    "files": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "['file1','file2','file3']"
                    }
                },
                "type": "object"
            },
            "StoreDocumentUploadFormRequest": {
                "title": "Store Document Upload Form Request Fields",
                "description": " Store Document Upload Update request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UpdateCompleteDocumentFormRequest": {
                "title": "Update Complete Document Form Request Fields",
                "description": "Update Complete Document Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "Untitled"
                    },
                    "files": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "['file1','file2','file3']"
                    }
                },
                "type": "object"
            },
            "UpdateDocumentFormRequest": {
                "title": "Admin Update Document Form Request Fields",
                "description": "Admin Update Document Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "Untitled"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "example": "title holder"
                                },
                                "entry_point": {
                                    "type": "string",
                                    "example": "Docs"
                                },
                                "file": {
                                    "type": "string",
                                    "example": "base64"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "parent_id": {
                        "title": "parent_id",
                        "description": "parent_id",
                        "type": "string",
                        "example": "parent_document_id"
                    },
                    "has_reminder": {
                        "title": "has_reminder",
                        "description": "has_reminder",
                        "type": "boolean",
                        "example": "required_if:parent_id,==,null|boolean"
                    },
                    "reminder_frequency": {
                        "title": "reminder_frequency",
                        "description": "reminder_frequency",
                        "type": "string",
                        "example": "1"
                    },
                    "has_sequence_order": {
                        "title": "has_sequence_order",
                        "description": "has_sequence_order",
                        "type": "boolean",
                        "example": "true"
                    },
                    "has_approval_sequence": {
                        "title": "has_approval_sequence",
                        "description": "has_approval_sequence",
                        "type": "boolean",
                        "example": "required_if:parent_id,==,null|boolean"
                    },
                    "has_signing_sequence": {
                        "title": "has_signing_sequence",
                        "description": "has_signing_sequence",
                        "type": "boolean",
                        "example": "required_if:parent_id,==,null|boolean"
                    }
                },
                "type": "object"
            },
            "UpdateDocumentParticipantFormRequest": {
                "title": "Admin Update Document Resource  Tool Form Request Fields",
                "description": "Admin Update Document  Resource Tool Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "participants": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "document_participant_id": {
                                    "type": "string",
                                    "example": "seatbelt holder"
                                },
                                "document_id": {
                                    "type": "string",
                                    "example": "seatbelt holder"
                                },
                                "first_name": {
                                    "type": "string",
                                    "example": "Ojo"
                                },
                                "last_name": {
                                    "type": "string",
                                    "example": "Ojo"
                                },
                                "phone": {
                                    "type": "string",
                                    "example": "07033839229"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "ojo@finrs.com"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "Signer,Viewer,Approver"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "has_sequence_order": {
                        "title": "has_sequence_order",
                        "description": "has_sequence_order",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "UpdateDocumentResourceFormRequest": {
                "title": "Admin Update Document Resource  Tool Form Request Fields",
                "description": "Admin Update Document  Resource Tool Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "append_print_id": {
                        "title": "Appending prin document page id",
                        "description": "Uploaded document page id",
                        "type": "string",
                        "example": "ids"
                    },
                    "document_id": {
                        "title": " document  id",
                        "description": " document  id",
                        "type": "string",
                        "example": "ids"
                    },
                    "document_upload_id": {
                        "title": "Uploaded document page id",
                        "description": "Uploaded document page id",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_name": {
                        "title": "Frontend Tool names",
                        "description": "Frontend Tool names",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_class": {
                        "title": "Frontend Tool class",
                        "description": "Frontend Tool class",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_height": {
                        "title": "Frontend Tool height",
                        "description": "Frontend Tool height",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_width": {
                        "title": "Frontend Tool weight",
                        "description": "Frontend Tool weight",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_pos_top": {
                        "title": "Frontend Tool position top",
                        "description": "Frontend Tool position top",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_pos_left": {
                        "title": "Frontend Tool position left",
                        "description": "Frontend Tool position left",
                        "type": "string",
                        "example": "ids"
                    },
                    "type": {
                        "title": "value",
                        "description": "type",
                        "type": "string",
                        "example": ""
                    },
                    "category": {
                        "title": "value",
                        "description": "value",
                        "type": "string",
                        "example": ""
                    },
                    "value": {
                        "title": "value",
                        "description": "value",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateDocumentResourceToolFromLocalFormRequest": {
                "title": "Update Document Resource  Tool From Local Form Request Fields",
                "description": "Update Document  Resource Tool From Local Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id",
                        "type": "string",
                        "example": "id"
                    },
                    "append_print_id": {
                        "title": "Appending prin document page id",
                        "description": "Uploaded document page id",
                        "type": "string",
                        "example": "ids"
                    },
                    "document_upload_id": {
                        "title": "Uploaded document page id",
                        "description": "Uploaded document page id",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_name": {
                        "title": "Frontend Tool names",
                        "description": "Frontend Tool names",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_class": {
                        "title": "Frontend Tool class",
                        "description": "Frontend Tool class",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_height": {
                        "title": "Frontend Tool height",
                        "description": "Frontend Tool height",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_width": {
                        "title": "Frontend Tool weight",
                        "description": "Frontend Tool weight",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_pos_top": {
                        "title": "Frontend Tool position top",
                        "description": "Frontend Tool position top",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_pos_left": {
                        "title": "Frontend Tool position left",
                        "description": "Frontend Tool position left",
                        "type": "string",
                        "example": "ids"
                    },
                    "type": {
                        "title": "value",
                        "description": "type",
                        "type": "string",
                        "example": ""
                    },
                    "category": {
                        "title": "value",
                        "description": "value",
                        "type": "string",
                        "example": ""
                    },
                    "value": {
                        "title": "value",
                        "description": "value",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateDocumentSingleCompleteFormRequest": {
                "title": "Update Document Single Complete Form Request Fields",
                "description": "Update Document Single Complete Form Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "files": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "['file1','file2','file3']"
                    },
                    "status": {
                        "title": "status",
                        "description": "status",
                        "type": "string",
                        "example": "DocumentComplete,ParticipantComplete"
                    },
                    "number_ordering": {
                        "title": "number_ordering",
                        "description": "number_ordering",
                        "type": "integer",
                        "example": "number_ordering"
                    }
                },
                "type": "object"
            },
            "StoreFeedbackFormRequest": {
                "title": "Store Feedback Form Request Fields",
                "description": "Store Feedback request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "review_id": {
                        "title": "review_id",
                        "description": "review_id",
                        "type": "string",
                        "example": "ids"
                    },
                    "user_id": {
                        "title": "user_id",
                        "description": "user_id",
                        "type": "string",
                        "example": "ids"
                    },
                    "review_type": {
                        "title": "review_type",
                        "description": "review_type",
                        "type": "string",
                        "example": "Document|ScheduleSession"
                    },
                    "comment": {
                        "title": "comment",
                        "description": "comment",
                        "type": "string",
                        "example": "You are good"
                    },
                    "rating": {
                        "title": "rating",
                        "description": "rating",
                        "type": "string",
                        "example": "4.5"
                    }
                },
                "type": "object"
            },
            "StoreNotaryCalendarScheduleFormRequest": {
                "title": "Update Notary Calendar Schedule Form Request Fields",
                "description": "Update Notary Calendar Schedule Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "calendar": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "date": {
                                    "type": "string",
                                    "example": "2022-09-22"
                                },
                                "day": {
                                    "type": "string",
                                    "example": "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday"
                                },
                                "start_time": {
                                    "type": "string",
                                    "example": "9:00"
                                },
                                "end_time": {
                                    "type": "string",
                                    "example": "17:00"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StoreNotaryLockerFormRequest": {
                "title": "Store Notary Locker Form Request Fields",
                "description": "Store Notary Locker Update request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "Untitled"
                    },
                    "files": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "['file1','file2','file3']"
                    }
                },
                "type": "object"
            },
            "StoreNotaryDocumentTemplateFormRequest": {
                "title": "Update Notary Template  Form Request Fields",
                "description": "Update Notary Template Request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UpdateNotaryRevertStatusFormRequest": {
                "title": "Update Notary Revert Schedule Form Request Fields",
                "description": "Update Notary Revert Schedule Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "status": {
                        "title": "status",
                        "description": "status",
                        "type": "string",
                        "example": "Rejected"
                    },
                    "schedule_session_id": {
                        "title": "schedule_session_id",
                        "description": "schedule_session_id",
                        "type": "string",
                        "example": "id"
                    },
                    "schedule_session_request_id": {
                        "title": "schedule_session_request_id",
                        "description": "schedule_session_request_id",
                        "type": "string",
                        "example": "id"
                    }
                },
                "type": "object"
            },
            "UpdateNotaryScheduleRequestFormRequest": {
                "title": "Update Notary Schedule Request Form Request Fields",
                "description": "Update Notary Schedule Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "status": {
                        "title": "status",
                        "description": "status",
                        "type": "string",
                        "example": "Rejected"
                    },
                    "schedule_session_id": {
                        "title": "schedule_session_id",
                        "description": "schedule_session_id",
                        "type": "string",
                        "example": "id"
                    },
                    "schedule_session_request_id": {
                        "title": "schedule_session_request_id",
                        "description": "schedule_session_request_id",
                        "type": "string",
                        "example": "id"
                    }
                },
                "type": "object"
            },
            "StoreUserPaymentGatewayFormRequest": {
                "title": "Store User Payment Gateway Form Request Fields",
                "description": "Store  User Payment Gateway  request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "payment_gateway_id": {
                        "title": "payment_gateway_id",
                        "description": "payment_gateway_id",
                        "type": "string",
                        "example": "ids"
                    }
                },
                "type": "object"
            },
            "StoreAddTicketsFormRequest": {
                "title": "Store User Plan Tickets Form Request Fields",
                "description": "Store  User Plan Tickets   request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "email",
                        "type": "string",
                        "example": "schneider@gmail.com"
                    },
                    "charge": {
                        "title": "charge",
                        "description": "charge",
                        "type": "string",
                        "example": "3"
                    }
                },
                "type": "object"
            },
            "StoreDocumentNotaryUploadFormRequest": {
                "title": "Store Document Notary Form Request Fields",
                "description": "Store Document Notary Fi request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "Untitled"
                    },
                    "files": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "['file1','file2','file3']"
                    },
                    "delivery_channel": {
                        "title": "delivery_channel",
                        "description": "delivery_channel",
                        "type": "integer",
                        "example": "In:Email|Address|Collection"
                    },
                    "delivery_address": {
                        "title": "delivery_address",
                        "description": "delivery_address",
                        "type": "string",
                        "example": "Add"
                    },
                    "platform_initiated": {
                        "title": "platform_initiated",
                        "description": "platform_initiated",
                        "type": "string",
                        "example": "Web|Mobile"
                    },
                    "actor_type": {
                        "title": "transaction type",
                        "description": "transaction type of the user",
                        "type": "string",
                        "example": "User/Team"
                    }
                },
                "type": "object"
            },
            "StoreNotaryScheduleFormRequest": {
                "title": "Store Notary Schedule Session Form Request Fields",
                "description": "Store Notary Schedule Session Form Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "type": {
                        "title": "type",
                        "description": "type",
                        "type": "string",
                        "example": "Template|Custom"
                    },
                    "schedule_id": {
                        "title": "schedule_id",
                        "description": "schedule_id",
                        "type": "string",
                        "example": "ids"
                    },
                    "schedule_type": {
                        "title": "schedule_type",
                        "description": "schedule_type",
                        "type": "string",
                        "example": "DocumentTemplate"
                    },
                    "title": {
                        "title": "title",
                        "description": "title",
                        "type": "string",
                        "example": "This is"
                    },
                    "description": {
                        "title": "description",
                        "description": "description",
                        "type": "integer",
                        "example": "this is"
                    },
                    "delivery_channel": {
                        "title": "delivery_channel",
                        "description": "delivery_channel",
                        "type": "integer",
                        "example": "In:Email|Address|Collection"
                    },
                    "delivery_address": {
                        "title": "delivery_address",
                        "description": "delivery_address",
                        "type": "string",
                        "example": "Add"
                    },
                    "actor_type": {
                        "title": "transaction type",
                        "description": "transaction type of the user",
                        "type": "string",
                        "example": "User/Team"
                    }
                },
                "type": "object"
            },
            "StoreRequestAffidavitFormRequest": {
                "title": "Store Request Affidavits Form Request Fields",
                "description": "Store  Request Affidavits Form Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "type": {
                        "title": "type",
                        "description": "type",
                        "type": "string",
                        "example": "Template|Custom"
                    },
                    "schedule_id": {
                        "title": "schedule_id",
                        "description": "schedule_id",
                        "type": "string",
                        "example": "ids"
                    },
                    "schedule_type": {
                        "title": "schedule_type",
                        "description": "schedule_type",
                        "type": "string",
                        "example": "DocumentTemplate"
                    },
                    "title": {
                        "title": "title",
                        "description": "title",
                        "type": "string",
                        "example": "This is"
                    },
                    "description": {
                        "title": "description",
                        "description": "description",
                        "type": "integer",
                        "example": "this is"
                    },
                    "delivery_channel": {
                        "title": "delivery_channel",
                        "description": "delivery_channel",
                        "type": "integer",
                        "example": "In:Email|Address|Collection"
                    },
                    "delivery_address": {
                        "title": "delivery_address",
                        "description": "delivery_address",
                        "type": "string",
                        "example": "Add"
                    },
                    "platform_initiated": {
                        "title": "platform_initiated",
                        "description": "platform_initiated",
                        "type": "string",
                        "example": "Web|Mobile"
                    },
                    "actor_type": {
                        "title": "transaction type",
                        "description": "transaction type of the user",
                        "type": "string",
                        "example": "User/Team"
                    }
                },
                "type": "object"
            },
            "StoreScheduleRecordingSessionRequest": {
                "title": "Store Schedule Recording Session Form Request Fields",
                "description": "Store  Schedule Recording Session Form Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "urls": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "schedule_session_id": {
                                    "type": "string",
                                    "example": "cecec"
                                },
                                "video_recording_file": {
                                    "type": "string",
                                    "example": "https://cneicnei"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StoreUserScheduleFormRequest": {
                "title": "Store User Schedule Session Form Request Fields",
                "description": "Store User Schedule Session Form Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "service_plan_id": {
                        "title": "service_plan_id",
                        "description": "service_plan_id",
                        "type": "string",
                        "example": "ids"
                    },
                    "document_id": {
                        "title": "document_id",
                        "description": "document_id",
                        "type": "string",
                        "example": "ids"
                    },
                    "date": {
                        "title": "date",
                        "description": "date",
                        "type": "string",
                        "example": "date"
                    },
                    "set_reminder_in_minutes": {
                        "title": "set_reminder_in_minutes",
                        "description": "set_reminder_in_minutes",
                        "type": "integer",
                        "example": "10"
                    },
                    "description": {
                        "title": "description",
                        "description": "description",
                        "type": "string",
                        "example": "description"
                    }
                },
                "type": "object"
            },
            "StoreVitrualScheduleSessionFormRequest": {
                "title": "Store User Schedule Virtual Session Form Request Fields",
                "description": "Store User Schedule Virtual Session Form Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "description": "title",
                        "type": "string",
                        "example": "This is"
                    },
                    "session_type": {
                        "title": "session_type",
                        "description": "title",
                        "type": "string",
                        "example": "notary_session,affidavit"
                    },
                    "description": {
                        "title": "description",
                        "description": "description",
                        "type": "integer",
                        "example": "this is"
                    },
                    "type": {
                        "title": "type",
                        "description": "type",
                        "type": "string",
                        "example": "Document,Upload,Template,Custom"
                    },
                    "files": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "['file1','file2','file3']"
                    },
                    "document_id": {
                        "title": "document_id",
                        "description": "document_id",
                        "type": "string",
                        "example": "ids"
                    },
                    "parent_id": {
                        "title": "parent_id",
                        "description": "parent_id",
                        "type": "string",
                        "example": "ids"
                    },
                    "document_template_id": {
                        "title": "document_template_id",
                        "description": "document_template_id",
                        "type": "string",
                        "example": "ids"
                    },
                    "schedule_id": {
                        "title": "schedule_id",
                        "description": "schedule_id",
                        "type": "string",
                        "example": "ids"
                    },
                    "schedule_type": {
                        "title": "schedule_type",
                        "description": "schedule_type",
                        "type": "string",
                        "example": "DocumentTemplate"
                    },
                    "delivery_channel": {
                        "title": "delivery_channel",
                        "description": "delivery_channel",
                        "type": "integer",
                        "example": "In:Email|Address|Collection"
                    },
                    "delivery_address": {
                        "title": "delivery_address",
                        "description": "delivery_address",
                        "type": "string",
                        "example": "Add"
                    },
                    "platform_initiated": {
                        "title": "platform_initiated",
                        "description": "platform_initiated",
                        "type": "string",
                        "example": "Web|Mobile"
                    },
                    "actor_type": {
                        "title": "transaction type",
                        "description": "transaction type of the user",
                        "type": "string",
                        "example": "User/Team"
                    },
                    "immediate": {
                        "title": "immediate",
                        "description": "immediate",
                        "type": "integer",
                        "example": "true/false"
                    },
                    "date": {
                        "title": "scheduled date",
                        "description": "scheduled date",
                        "type": "string",
                        "example": "2022-5-12"
                    },
                    "set_reminder_in_minutes": {
                        "title": "set_reminder_in_minutes",
                        "description": "set_reminder_in_minutes",
                        "type": "string",
                        "example": "15"
                    },
                    "start_time": {
                        "title": "start_time",
                        "description": "start_time",
                        "type": "string",
                        "example": "9:00"
                    },
                    "end_time": {
                        "title": "end_time",
                        "description": "end_time",
                        "type": "string",
                        "example": "9:15"
                    },
                    "entry_point": {
                        "title": "entry_point",
                        "description": "entry_point",
                        "type": "string",
                        "example": "Docs,Notary,Video,Affidavits"
                    },
                    "has_monetary_value": {
                        "title": "has_monetary_value",
                        "description": "has_monetary_value",
                        "type": "boolean",
                        "example": "false"
                    },
                    "participants": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "first_name": {
                                    "type": "string",
                                    "example": "Ojo"
                                },
                                "last_name": {
                                    "type": "string",
                                    "example": "Ojo"
                                },
                                "phone": {
                                    "type": "string",
                                    "example": "07033839229"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "ojo@finrs.com"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "Signer"
                                },
                                "entry_point": {
                                    "type": "string",
                                    "example": "Docs,Notary,Video,Affidavits"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UpdateCustomAffidavitRequestFormRequest": {
                "title": "Update Custom Affidavit Form Request Fields",
                "description": "Update Custom Affidavit Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "Untitled"
                    },
                    "files": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "['file1','file2','file3']"
                    }
                },
                "type": "object"
            },
            "UpdateNotaryScheduleFormRequest": {
                "title": "Update  Notary Schedule Session Form Request Fields",
                "description": "Update Notary Schedule Session Form Request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UpdateScheduleMonetaryValueFormRequest": {
                "title": "Update  Monetary Value Schedule Session Form Request Fields",
                "description": "Update Monetary Value Schedule Session Form Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "has_monetary_value": {
                        "title": "has_monetary_value",
                        "description": "has_monetary_value",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "UpdateScheduleRecordingSessionRequest": {
                "title": "Update Schedule Recording Session Form Request Fields",
                "description": "Update Schedule Recording Session Form Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "video_recording_file": {
                        "title": "video_recording_file",
                        "description": "video_recording_file",
                        "type": "string",
                        "example": "Untitled"
                    }
                },
                "type": "object"
            },
            "UpdateScheduleSessionWhileOnCallRequest": {
                "title": "Update Participant On call Form Request Fields",
                "description": "Update Participant On call Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "participants": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "first_name": {
                                    "type": "string",
                                    "example": "Ojo"
                                },
                                "last_name": {
                                    "type": "string",
                                    "example": "Ojo"
                                },
                                "phone": {
                                    "type": "string",
                                    "example": "07033839229"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "ojo@finrs.com"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "Signer"
                                },
                                "entry_point": {
                                    "type": "string",
                                    "example": "Docs,Notary,Video,Affidavits"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UpdateUserScheduleFormRequest": {
                "title": "Update User Schedule Session Form Request Fields",
                "description": "Update User Schedule Session Form Request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UpdateVirtualScheduleSessionCreditFormRequest": {
                "title": "Update User Schedule Virtual Session Credit Form Request Fields",
                "description": "Update User Schedule Virtual Session Credit Form Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "minutes": {
                        "title": "minutes",
                        "description": "minutes",
                        "type": "string",
                        "example": "300"
                    }
                },
                "type": "object"
            },
            "UpdateVirtualScheduleSessionFormRequest": {
                "title": "Update User Schedule Virtual Session Form Request Fields",
                "description": "Update User Schedule Virtual Session Form Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "status": {
                        "title": "status",
                        "description": "status",
                        "type": "string",
                        "example": "Completed,Rejected,Cancelled"
                    },
                    "cancel_reason": {
                        "title": "cancel_reason",
                        "description": "cancel_reason",
                        "type": "string",
                        "example": "great service"
                    },
                    "comment": {
                        "title": "comment",
                        "description": "comment",
                        "type": "string",
                        "example": "This service is a life saver"
                    }
                },
                "type": "object"
            },
            "StorePrintFormRequest": {
                "title": "Store Print Form Request Fields",
                "description": "Store Print Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "file": {
                        "title": "File",
                        "description": "required_if:type,==,Initial|required_if:type,==,Signature|required_if:type,==,Stamp|required_if:type,==,Seal|required_if:type,==,Photograph|required_if:type,==,Thumbprint|string|base64image",
                        "type": "string",
                        "example": "base64File"
                    },
                    "type": {
                        "title": "type",
                        "description": "type",
                        "type": "string",
                        "example": "Initial|Signature|NotaryStamp|NotaryTraditionalSeal|NotaryDigitalSeal|CompanyStamp|CompanySeal|Photograph|Camera|LeftThumbFinger|LeftPointerFinger|LeftMiddleFinger|LeftRingFinger|LeftPinkyFinger|LeftPinkyFinger|RightThumbFinger|RightPointerFinger|RightMiddleFinger|RightRingFinger|RightPinkyFinger|Text"
                    },
                    "category": {
                        "title": "category",
                        "description": "category",
                        "type": "string",
                        "example": "Draw|Type|Upload"
                    },
                    "value": {
                        "title": "value",
                        "description": "required_if:type,==,Text",
                        "type": "string",
                        "example": "Ade"
                    }
                },
                "type": "object"
            },
            "UpdatePrintFormRequest": {
                "title": "Update Print Form Request Fields",
                "description": "Update Print Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "value": {
                        "title": "value",
                        "description": "value",
                        "type": "string",
                        "example": "Ade"
                    }
                },
                "type": "object"
            },
            "StoreSignlinkAnnotationFormRequest": {
                "title": "Store Signlink Annotation Notary Form Request Fields",
                "description": "Store Signlink Annotation Notary Form request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "document_upload_id": {
                        "title": "Uploaded document page id",
                        "description": "Uploaded document page id",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_name": {
                        "title": "Frontend Tool names",
                        "description": "Frontend Tool names",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_class": {
                        "title": "Frontend Tool class",
                        "description": "Frontend Tool class",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_height": {
                        "title": "Frontend Tool height",
                        "description": "Frontend Tool height",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_width": {
                        "title": "Frontend Tool weight",
                        "description": "Frontend Tool weight",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_pos_top": {
                        "title": "Frontend Tool position top",
                        "description": "Frontend Tool position top",
                        "type": "string",
                        "example": "ids"
                    }
                },
                "type": "object"
            },
            "StoreSignlinkDocumentsFormRequest": {
                "title": "Store Signlink Document Notary Form Request Fields",
                "description": "Store Signlink Document Notary Fi request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "Untitled"
                    },
                    "files": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "['file1','file2','file3']"
                    }
                },
                "type": "object"
            },
            "UpdatePublicAnnotationSignlinkDocumentsFormRequest": {
                "title": "Store Signlink Public annotation Document Notary Form Request Fields",
                "description": "Store Signlink Public annotation Document Notary Fi request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "document_id": {
                        "title": "document_id",
                        "description": "document_id",
                        "type": "string",
                        "example": "ids"
                    },
                    "document_upload_id": {
                        "title": "Uploaded document page id",
                        "description": "Uploaded document page id",
                        "type": "string",
                        "example": "ids"
                    },
                    "value": {
                        "title": "value",
                        "description": "value",
                        "type": "string",
                        "example": ""
                    },
                    "tool_pos_left": {
                        "title": "tool_pos_left",
                        "description": "tool_pos_left",
                        "type": "string",
                        "example": ""
                    },
                    "tool_pos_top": {
                        "title": "tool_pos_top",
                        "description": "tool_pos_top",
                        "type": "string",
                        "example": ""
                    },
                    "tool_height": {
                        "title": "Frontend Tool height",
                        "description": "Frontend Tool height",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_width": {
                        "title": "Frontend Tool weight",
                        "description": "Frontend Tool weight",
                        "type": "string",
                        "example": "ids"
                    }
                },
                "type": "object"
            },
            "UpdateSignlinkAnnotationFormRequest": {
                "title": "Update Signlink Annotation Notary Form Request Fields",
                "description": "Update Signlink Annotation Notary Form request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "document_upload_id": {
                        "title": "Uploaded document page id",
                        "description": "Uploaded document page id",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_name": {
                        "title": "Frontend Tool names",
                        "description": "Frontend Tool names",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_class": {
                        "title": "Frontend Tool class",
                        "description": "Frontend Tool class",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_height": {
                        "title": "Frontend Tool height",
                        "description": "Frontend Tool height",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_width": {
                        "title": "Frontend Tool weight",
                        "description": "Frontend Tool weight",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_pos_top": {
                        "title": "Frontend Tool position top",
                        "description": "Frontend Tool position top",
                        "type": "string",
                        "example": "ids"
                    },
                    "tool_pos_left": {
                        "title": "Frontend Tool position left",
                        "description": "Frontend Tool position left",
                        "type": "string",
                        "example": "ids"
                    },
                    "type": {
                        "title": "value",
                        "description": "type",
                        "type": "string",
                        "example": ""
                    },
                    "category": {
                        "title": "value",
                        "description": "value",
                        "type": "string",
                        "example": ""
                    },
                    "value": {
                        "title": "value",
                        "description": "value",
                        "type": "string",
                        "example": ""
                    },
                    "allow_signature": {
                        "title": "allow_signature",
                        "description": "allow_signature",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateSignlinkDocumentsFormRequest": {
                "title": "Update Signlink Document Notary Form Request Fields",
                "description": "Update Signlink Document Notary Fi request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UpdateSignlinkUserFormDataFormRequest": {
                "title": "Store Signlink User Form Data Form Request Fields",
                "description": "Store Signlink User Form Data Form request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "first_name": {
                        "title": "first_name",
                        "description": "first_name of the user",
                        "type": "string",
                        "example": "Schneider"
                    },
                    "last_name": {
                        "title": "last_name",
                        "description": "last_name of the user",
                        "type": "string",
                        "example": "Schneider"
                    },
                    "phone": {
                        "title": "User Role",
                        "description": "04040333",
                        "type": "string",
                        "example": "phone"
                    },
                    "email": {
                        "title": "User email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "info@tonote.com"
                    },
                    "files": {
                        "title": "Title",
                        "description": "Title",
                        "type": "string",
                        "example": "['file1','file2','file3']"
                    }
                },
                "type": "object"
            },
            "PostSubscriptionFormRequest": {
                "title": "Store Subscription Form Request Fields",
                "description": "Store Subscription Form request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "team": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "example": "ojo@finrs.com"
                                },
                                "first_name": {
                                    "type": "string",
                                    "example": "first_name"
                                },
                                "last_name": {
                                    "type": "string",
                                    "example": "first_name"
                                },
                                "permission": {
                                    "type": "string",
                                    "example": "Admin,Send,View"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "number_of_users": {
                        "title": "number_of_users",
                        "description": "number_of_users",
                        "type": "integer",
                        "example": "3"
                    },
                    "plan_id": {
                        "title": "plan_id",
                        "description": "plan_id",
                        "type": "string",
                        "example": "plan_id"
                    }
                },
                "type": "object"
            },
            "StoreTeamFormRequest": {
                "title": "Store Team Form Request Fields",
                "description": "Store Team Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "team": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "example": "ojo@finrs.com"
                                },
                                "first_name": {
                                    "type": "string",
                                    "example": "first_name"
                                },
                                "last_name": {
                                    "type": "string",
                                    "example": "first_name"
                                },
                                "permission": {
                                    "type": "string",
                                    "example": "Admin,Send,View"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "number_of_users": {
                        "title": "number_of_users",
                        "description": "number_of_users",
                        "type": "integer",
                        "example": "3"
                    }
                },
                "type": "object"
            },
            "UpdateTeamFormRequest": {
                "title": "Update Team Form Request Fields",
                "description": "Update Team Request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UpdateTeamSettingFormRequest": {
                "title": "Update Team Settings Form Request Fields",
                "description": "Update Team Settings Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "name of the team",
                        "type": "string",
                        "example": "Carry me dey go Team"
                    },
                    "notify_owner_when_document_complete": {
                        "title": "notify_owner_when_document_complete",
                        "description": "notify_owner_when_document_complete",
                        "type": "boolean",
                        "example": "true"
                    },
                    "notify_owner_when_a_signer_refuse_to_sign": {
                        "title": "notify_owner_when_a_signer_refuse_to_sign",
                        "description": "notify_owner_when_a_signer_refuse_to_sign",
                        "type": "boolean",
                        "example": "true"
                    },
                    "notify_owner_when_each_signer_views_a_document": {
                        "title": "notify_owner_when_each_signer_views_a_document",
                        "description": "notify_owner_when_each_signer_views_a_document",
                        "type": "boolean",
                        "example": "true"
                    },
                    "notify_owner_always_cc_admin": {
                        "title": "notify_owner_always_cc_admin",
                        "description": "notify_owner_always_cc_admin",
                        "type": "boolean",
                        "example": "true"
                    },
                    "notify_signer_when_to_sign_a_document": {
                        "title": "notify_signer_when_to_sign_a_document",
                        "description": "notify_signer_when_to_sign_a_document",
                        "type": "boolean",
                        "example": "true"
                    },
                    "notify_signer_when_document_complete": {
                        "title": "notify_signer_when_document_complete",
                        "description": "notify_signer_when_document_complete",
                        "type": "boolean",
                        "example": "true"
                    },
                    "notify_signer_when_signer_declines_to_sign_document": {
                        "title": "notify_signer_when_signer_declines_to_sign_document",
                        "description": "notify_signer_when_signer_declines_to_sign_document",
                        "type": "boolean",
                        "example": "true"
                    },
                    "notify_signer_when_owner_withdraws_document": {
                        "title": "notify_signer_when_owner_withdraws_document",
                        "description": "notify_signer_when_owner_withdraws_document",
                        "type": "boolean",
                        "example": "true"
                    },
                    "notify_signer_always_cc_admin": {
                        "title": "notify_signer_always_cc_admin",
                        "description": "notify_signer_always_cc_admin",
                        "type": "boolean",
                        "example": "true"
                    },
                    "notify_signer_when_document_updated": {
                        "title": "notify_signer_when_document_updated",
                        "description": "notify_signer_when_document_updated",
                        "type": "boolean",
                        "example": "true"
                    },
                    "send_sms": {
                        "title": "send_sms",
                        "description": "send_sms",
                        "type": "boolean",
                        "example": "true"
                    },
                    "send_email": {
                        "title": "send_email",
                        "description": "send_email",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "StoreTransactionFormRequest": {
                "title": "Store Transaction Form Request Fields",
                "description": "Store Transaction Request body field",
                "required": [
                    "name"
                ],
                "properties": {
                    "transactionable_type": {
                        "title": "transaction type",
                        "description": "transaction type of the user",
                        "type": "string",
                        "example": "Plan|ExtraSeal"
                    },
                    "transactionable_id": {
                        "title": "transaction id",
                        "description": "transaction id of the user",
                        "type": "string",
                        "example": "Plan"
                    },
                    "parent_id": {
                        "title": "parent id",
                        "description": "parent id of the user",
                        "type": "string",
                        "example": "Plan"
                    },
                    "platform_initiated": {
                        "title": "platform_initiated",
                        "description": "platform_initiated",
                        "type": "string",
                        "example": "Web|Mobile"
                    },
                    "actor_type": {
                        "title": "transaction type",
                        "description": "transaction type of the user",
                        "type": "string",
                        "example": "User/Team"
                    }
                },
                "type": "object"
            },
            "UpdateTransactionFormRequest": {
                "title": "Update Transaction Form Request data",
                "description": "Update Transaction Request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "payment_gateway": {
                        "title": "payment_gateway",
                        "description": "payment_gateway of the payment",
                        "type": "string",
                        "example": "Paystack,Flutterwave,Credo"
                    }
                },
                "type": "object"
            },
            "StoreQoreIdCompanyFormRequest": {
                "title": "QoreId company Form Request Fields",
                "description": "QoreId company request body data",
                "properties": {
                    "regNumber": {
                        "title": "Company reset rc",
                        "description": "Reset rc of the Company",
                        "type": "string",
                        "example": "RC10001"
                    },
                    "type": {
                        "title": "Company type rc",
                        "description": "type rc of the Company",
                        "type": "string",
                        "example": "Business|Limited Company|Incorprated Trustee"
                    }
                },
                "type": "object"
            },
            "StoreQoreIdFaceMatchVerificationFormRequest": {
                "title": "Store Quore Id Form Request Fields",
                "description": "Store Quore Id Form Request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "type": {
                        "title": "Verify type",
                        "description": "Verify type",
                        "type": "string",
                        "example": "bvn,nin,drivers_license,vnin"
                    },
                    "photoBase64": {
                        "title": "photoBase64",
                        "description": "photoBase64",
                        "type": "string",
                        "example": "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDABALDA4MChAODQ4SERATGCgaGBYWGDEjJR0oOjM9PDkzODdASFxOQERXRTc4UG1RV19iZ2hnPk1xeXBkeFxlZ2P/2wBDARESEhgVGC8aGi9jQjhCY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2P/wAARCAmQCZADASIAAhEBAxEB/8QAGwABAQEBAQEBAQAAAAAAAAAAAAECAwQFBgf/xAA/EAACAgEEAQMDAwIFAwIGAAcAAQIRIQMSMUFRBCJhEzJxBYGRQqEGFCNSsWLB0TNyFSRDguHwkvE0orJTFv/EABkBAQEBAQEBAAAAAAAAAAAAAAABAgMEBf/EACQRAQEBAQACAgICAwEBAAAAAAABEQISMQMhBEETUSIjcTJh/9oADAMBAAIRAxEAPwD9YADg7AAAFHIChAAFgAACAooACAAAABEG"
                    },
                    "idNumber": {
                        "title": "idNumber",
                        "description": "idNumber",
                        "type": "string",
                        "example": "95888168924"
                    }
                },
                "type": "object"
            },
            "StoreVerifyCompanyFormRequest": {
                "title": "Company Verify Me Form Request Fields",
                "description": "Company Verify Me request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "registration_company_number": {
                        "title": "Company reset rc",
                        "description": "Reset rc of the Company",
                        "type": "string",
                        "example": "RC293332"
                    },
                    "type": {
                        "title": "Company type rc",
                        "description": "type rc of the Company",
                        "type": "string",
                        "example": "Business|Limited Company|Incorprated Trustee"
                    }
                },
                "type": "object"
            },
            "StoreVerifyMeFormRequest": {
                "title": "User Verify Me Form Request Fields",
                "description": "User Verify Me request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "type": {
                        "title": "Verify type",
                        "description": "Verify type",
                        "type": "string",
                        "example": "bvn,nin,drivers_license,vnin"
                    },
                    "value": {
                        "title": "verify value",
                        "description": "verify value",
                        "type": "string",
                        "example": "1029333022"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "403": {
                "description": "User is not an affiliate"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Tonote backend team",
            "description": "(Schneider Shades Komolafe - API Overseer)"
        }
    ]
}